@model List<MVCapp.Models.Team>
@using MVCapp.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    ViewBag.Title = "My Favourites";
    var user = await UserManager.GetUserAsync(User);
}

<h2>My Favourite Teams</h2>
<head>
    <script src="~/js/favourites.js"></script>
</head>
<table class="table">
    <thead>
        <tr>
            <th>Team</th>
            <th>Latest Matches</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var team in Model)
        {
            <tr class="teamRow" data-teamid="@team.Id">
                <td>@team.Name <img src="@team.Logo" /></td>
                <td>
                    @foreach (var match in team.AllMatches.OrderByDescending(m => m.Date).Take(5))
                    {
                        if (match.HomeTeamId == team.Id)
                        {
                            <span class="@GetMatchResultClass(match.HomeScore, match.AwayScore)"></span>
                        }
                        else
                        {
                            <span class="@GetMatchResultClass(match.AwayScore, match.HomeScore)"></span>
                        }
                    }
                </td>
                <td>
                    <button class="remove-favourite-button" data-teamid="@team.Id" onclick="removeFavourite(@team.Id); removeRecord()">
                        <img class="star" src="/icons/star-fill.svg" alt="Remove from favourites">
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<div id="slideOutContainer">
    <div id="slideOutContent">
        <div class="closeButton" onclick="closeSlideOut()">X</div>
        <div class="teamDetails">
            <img src="" alt="Team Icon" id="teamIcon" />
            <div id="teamInfo"></div>
        </div>
        <hr class="line" />
        <ul id="matchList"></ul>
    </div>
</div>
@functions {

    public string GetMatchResultClass(int teamScore, int opponentScore)
    {
        if (teamScore > opponentScore)
        {
            return "result-symbol green-circle";
        }
        else if (teamScore < opponentScore)
        {
            return "result-symbol red-circle";
        }
        else
        {
            return "result-symbol gray-circle";
        }
    }
}
@section Scripts {
    <script>
        const slideOutContainer = document.getElementById('slideOutContainer');
        const teamInfoContainer = document.getElementById('teamInfo');
        const teamIcon = document.getElementById('teamIcon');
        const matchListContainer = document.getElementById('matchList');
        let teamIconUrl = '';

        function openSlideOut(teamId, teamName, iconUrl) {
            teamInfoContainer.innerHTML = `<h3>${teamName}</h3>`;
            teamIcon.src = iconUrl;

            fetch(`/Favourites/GetTeamMatches?teamId=${teamId}`)
                .then(response => response.json())
                .then(responseData => responseData)
                .then(matches => {
                    let html = '';
                    matches.forEach(match => {
                        html += `
                                            <li>
                                                ${match.HomeTeam.Name}
                                                <img src="${match.HomeTeam.Logo}" class="small-icon" />
                                                ${match.HomeScore} - ${match.AwayScore}
                                                ${match.AwayTeam.Name}
                                                <img src="${match.AwayTeam.Logo}" class="small-icon" />
                                            </li>`;
                    });
                    matchListContainer.innerHTML = html;
                    slideOutContainer.style.right = '0';
                })
                .catch(error => {
                    console.error('Error fetching matches:', error);
                });
        }

        function closeSlideOut() {
            slideOutContainer.style.right = '-400px';
        }

        function removeRecord()  
        {
            var button = event.target;

            var row = button.closest('tr');

            if (row) 
            {
                row.remove();
            }
        }
        const teamRows = document.querySelectorAll('.teamRow');
        teamRows.forEach(row => {
            row.addEventListener('click', () => {
                if (!event.target.matches('button') && !event.target.classList.contains('star')) {
                    const teamId = row.getAttribute('data-teamid');
                    const teamName = row.cells[0].innerText;
                    teamIconUrl = row.cells[0].querySelector('img').src;
                    openSlideOut(teamId, teamName, teamIconUrl);
                }
            });
        });
    </script>
}
