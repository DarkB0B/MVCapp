@model List<MVCapp.Models.Team>

@{
    ViewBag.Title = "Leagues";
}

<h2>League Table</h2>

@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    <label for="selectedLeagueId">League:</label>
    @Html.DropDownList("selectedLeagueId", (SelectList)ViewBag.Leagues, "Select League", new { onchange = "this.form.submit();" })
}

<table class="table">
    <thead>
        <tr>
            <th>Team</th>
            <th>PKT</th>
            <th>Last Matchs</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var team in Model)
        {
            <tr class="teamRow" data-teamid="@team.Id">
                <td>@team.Name <img src="@team.Logo" /></td>
                <td>20</td>
                <td>
                    @foreach (var match in team.AllMatches.OrderByDescending(m => m.Date).Take(5))
                    {
                        if (match.HomeTeamId == team.Id)
                        {
                            <span class="@GetMatchResultClass(match.HomeScore, match.AwayScore)"></span>
                        }
                        else
                        {
                            <span class="@GetMatchResultClass(match.AwayScore, match.HomeScore)"></span>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="slideOutContainer">
    <div id="slideOutContent">
        <div class="closeButton" onclick="closeSlideOut()">X</div>
        <div class="teamDetails">
        <img src="" alt="Team Icon" id="teamIcon" />
        <div id="teamInfo"></div>
        </div>
        
        <ul id="matchesList"></ul>
    </div>
</div>
@section scripts {
    <script>
        const slideOutContainer = document.getElementById('slideOutContainer');
        const teamInfoContainer = document.getElementById('teamInfo');
        const teamIcon = document.getElementById('teamIcon');
        const matchesListContainer = document.getElementById('matchesList');
        let teamIconUrl = '';

        function openSlideOut(teamId, teamName, iconUrl) {
            teamInfoContainer.innerHTML = `<h3>${teamName}</h3>`;
            teamIcon.src = iconUrl;
            matchesListContainer.innerHTML = `<li>Match 1</li><li>Match 2</li><li>Match 3</li>`;

            slideOutContainer.style.left = '0';
        }

        function closeSlideOut() {
            slideOutContainer.style.left = '-300px';
        }

        const teamRows = document.querySelectorAll('.teamRow');
        teamRows.forEach(row => {
            row.addEventListener('click', () => {
                const teamId = row.getAttribute('data-teamid');
                const teamName = row.cells[0].innerText;
                teamIconUrl = row.cells[0].querySelector('img').src;
                openSlideOut(teamId, teamName, teamIconUrl);
            });
        });
    </script>
}
@functions {
    
    public string GetMatchResultClass(int teamScore, int opponentScore)
    {
        if (teamScore > opponentScore)
        {
            return "result-symbol green-circle";
        }
        else if (teamScore < opponentScore)
        {
            return "result-symbol red-circle";
        }
        else
        {
            return "result-symbol gray-circle";
        }
    }
}